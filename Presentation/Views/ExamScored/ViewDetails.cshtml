
@model Application.DTOs.Exam.ExamViewDetailsDTO
@{
	ViewData["Title"] = "Chi tiết bài làm";
	int index = 1;
}

<div class="container py-5" style="min-height: 65vh;">
	<h2 class="text-center mb-5 fw-bold" style="color: #D13D76; font-size: 2.5rem">
		📚 Hồ sơ bài thi cá nhân
	</h2>

	<style>
		.timeline-box {
			position: relative;
			padding-left: 40px;
			margin-bottom: 40px;
			border-left: 3px solid #FAD3E7;
		}

		.timeline-dot {
			position: absolute;
			left: -10px;
			top: 0;
			width: 20px;
			height: 20px;
			background-color: #FE9FC3;
			border-radius: 50%;
			border: 3px solid white;
			box-shadow: 0 0 0 3px #FAD3E7;
		}

		.card-question {
			background: #FFFFFF;
			border: 2px solid #D8F8F2;
			border-radius: 16px;
			padding: 20px;
			box-shadow: 0 4px 20px rgba(0,0,0,0.05);
			transition: 0.3s ease;
		}

			.card-question.correct {
				border-left: 8px solid #A8E6CF;
			}

			.card-question.incorrect {
				border-left: 8px solid #FF8C94;
			}

			.card-question.skipped {
				border-left: 8px solid #FFE29C;
			}

		.answer-option {
			border-radius: 10px;
			padding: 12px 16px;
			margin-bottom: 10px;
			background-color: #F9F9F9;
			border: 1.5px solid transparent;
			transition: 0.2s ease;
		}

			.answer-option.correct {
				border-color: #A8E6CF;
				background-color: #E0F9F1;
			}

			.answer-option.incorrect {
				border-color: #FFB1BE;
				background-color: #FFF1F4;
			}

			.answer-option.user-selected {
				box-shadow: 0 0 0 2px #FE9FC3 inset;
			}

		.status-badge {
			font-size: 0.85rem;
			border-radius: 1rem;
			padding: 4px 12px;
			font-weight: bold;
			display: inline-block;
		}

		.status-correct {
			background-color: #A8E6CF;
			color: #1a4f3f;
		}

		.status-incorrect {
			background-color: #FFB1BE;
			color: #9e1c27;
		}

		.status-skipped {
			background-color: #FFE29C;
			color: #704c00;
		}
	</style>

	@foreach (var question in Model.Questions)
	{
		var userAnswer = Model.UserAnswered.FirstOrDefault(x => x.QuestionId == question.Id);
		var correctAnswer = question.Answers.FirstOrDefault(a => a.IsCorrected);
		var isSkipped = userAnswer == null;
		var isCorrect = !isSkipped && userAnswer.AnswerId == correctAnswer?.Id;
		var statusClass = isSkipped ? "skipped" : isCorrect ? "correct" : "incorrect";
		var statusText = isSkipped ? "⚠️ Bỏ qua" : isCorrect ? "✅ Trả lời đúng" : "❌ Trả lời sai";

		<div class="timeline-box">
			<div class="timeline-dot"></div>
			<div class="card-question @statusClass">
				<div class="d-flex justify-content-between align-items-center mb-3">
					<h5 class="fw-bold mb-0">Câu @index: @question.Content</h5>
					<span class="status-badge status-@statusClass">@statusText</span>
				</div>
				<div class="ps-2">
					@foreach (var answer in question.Answers)
					{
						var isUserSelected = userAnswer?.AnswerId == answer.Id;
						var isCorrectAnswer = answer.IsCorrected;

						var classes = "";
						if (isCorrectAnswer) classes += " correct";
						if (isUserSelected && !isCorrectAnswer) classes += " incorrect";
						if (isUserSelected) classes += " user-selected";

						<div class="answer-option @classes">
							<input class="form-check-input me-2" type="radio" disabled
								   name="question-@question.Id"
								   value="@answer.Id"
							@(isUserSelected ? "checked" : "") />
							<label class="form-check-label fw-semibold">@answer.AnswerText</label>
							@if (isCorrectAnswer)
							{
								<span class="ms-2 text-success">✔ Đáp án đúng</span>
							}
							else if (isUserSelected)
							{
								<span class="ms-2 text-danger">✘ Bạn đã chọn</span>
							}
						</div>
					}
				</div>
			</div>
		</div>

		index++;
	}
</div>