@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@using Microsoft.AspNetCore.Identity
@using System.Security.Claims

@model Application.DTOs.Exam.ExamTakeDTO

@{
	ViewData["Title"] = "Vào thi - " + Model.Title;
	var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
}

@section Styles {
	<link rel="stylesheet" href="~/css/exam-take.css" />
}

<form method="post" asp-controller="Exam" asp-action="SubmitExam" id="examForm" data-userid="@userId"
	  data-totalseconds="@Model.TotalTime.TotalSeconds">
	@Html.AntiForgeryToken()
	<input type="hidden" name="ExamId" value="@Model.Id" />
	<input type="hidden" name="ExamScoredId" value="@Model.ExanScoredId" />

	<div class="container mt-4">
		<h2 class="text-center mb-4">@Model.Title</h2>
		<div class="row">
			<!-- Sidebar -->
			<div class="col-md-3 py-3 rounded rounded-5" style="background-color: white; box-shadow: 0 0 10px rgba(0,0,0,0.1);">

				<div id="countdown" class="text-center">
					⏳ Thời gian còn lại: <span id="time">--:--</span>
				</div>

				<div class="nav-grid">
					@for (int i = 0; i < Model.Questions.Count; i++)
					{
						<button type="button" class="btn question-nav-btn"
								data-question-index="@i"
								>
							@(@i + 1)
						</button>
					}
				</div>
			</div>

			<!-- Main content -->
			<div class="col-md-9 rounded rounded-5" style="padding-left: 60px; background-color: white; box-shadow: 0 0 10px rgba(0,0,0,0.1); display: flex; justify-content: center; align-items: center;">
				@for (int i = 0; i < Model.Questions.Count; i++)
				{
					var question = Model.Questions[i];
					<div class="question-box card-question" id="question-@i" style="display: @(i == 0 ? "block" : "none"); padding-top: 20px;width:100%;">
						<p><strong>@("Câu " + (i + 1) + ": ")</strong>@question.Content</p>

						@foreach (var answer in question.Answers)
						{
							<div class="form-check">
								<input class="form-check-input" type="radio"
									   name="Answers[@i].AnswerId"
									   id="answer_@answer.Id"
									   value="@answer.Id" />
								<label class="form-check-label" for="answer_@answer.Id">
									@answer.AnswerText
								</label>
							</div>
						}
						<div class="d-flex justify-content-between mt-4">
							@if (i > 0)
							{
								<button type="button" class="btn btn-outline-secondary px-4"
										onclick="showQuestion(@(i - 1))">
									⬅ Câu trước
								</button>
							}
							else
							{
								<span></span>
							}

							@if (i < Model.Questions.Count - 1)
							{
								<button type="button" class="btn btn-outline-primary px-4"
										onclick="showQuestion(@(i + 1))">
									Câu tiếp ➡
								</button>
							}
						</div>
						<input type="hidden" name="Answers[@i].QuestionId" value="@question.Id" />
					</div>
				}

			</div>
		</div>

		<button type="submit" id="submitBtn" class="btn btn-primary d-block mx-auto mt-4" style="width: max-content">Nộp bài</button>
	</div>
</form>

<!-- Hết giờ Modal -->
<div id="timeoutModal" class="modal-overlay" style="display: none;">
	<div class="modal-content">
		<h4>⏰ Hết giờ làm bài</h4>
		<p>Bài thi của bạn đã hết giờ. Hệ thống sẽ tự động nộp bài ngay bây giờ.</p>
		<button class="btn btn-dark" onclick="confirmAutoSubmit()">OK</button>
	</div>
</div>

@section Scripts {
	<script src="~/js/exam-take.js"></script>	
}
<script>
	const isNewExam = @(Model.ExanScoredId == null || Model.ExanScoredId == 0 ? "true" : "false");
	const userId = "@User.FindFirstValue(ClaimTypes.NameIdentifier)";
	const examId = "@Model.Id";

	if (isNewExam === "true" && localStorage.getItem("examStates")) {
		let data = JSON.parse(localStorage.getItem("examStates") || "{}");
		if (data[userId] && data[userId][examId]) {
			delete data[userId][examId];
			localStorage.setItem("examStates", JSON.stringify(data));
			console.log("🧹 Đã xoá dữ liệu cũ vì là bài thi mới");
		}
	}
</script>
