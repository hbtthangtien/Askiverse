@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@model Application.DTOs.Exam.ExamTakeDTO

@{
	ViewData["Title"] = "Vào thi - " + Model.Title;
}

<form method="post" asp-controller="Exam" asp-action="SubmitExam">
	@Html.AntiForgeryToken()
	<input type="hidden" name="ExamId" value="@Model.Id" />

	<div class="container mt-4">
		<h2 class="text-center mb-4">@Model.Title</h2>
		<div class="row">
			<!-- Sidebar -->
			<div class="col-md-3 py-3 rounded rounded-5" style="background-color: white; box-shadow: 0 0 10px rgba(0,0,0,0.1);">
				
				<div id="countdown" class="text-center fs-5 fw-bold text-danger mb-4">
					⏳ Thời gian còn lại: <span id="time">--:--</span>
				</div>
				
				<div class="d-grid" style="grid-template-columns: repeat(5, 1fr); gap: 8px; padding-left: 20px">
					@for (int i = 0; i < Model.Questions.Count; i++)
					{
						<button type="button" class="btn btn-outline-primary p-1 text-center"
								style="width: 26px; height: 26px; font-size: 14px;"
								onclick="showQuestion(@i)">
							@(@i + 1)
						</button>
					}
				</div>
			</div>

			<!-- Main content -->
			<div class="col-md-9 rounded rounded-5" style="padding-left: 60px; background-color: white; box-shadow: 0 0 10px rgba(0,0,0,0.1);">
				@for (int i = 0; i < Model.Questions.Count; i++)
				{
					var question = Model.Questions[i];
					<div class="question-box" id="question-@i" style="display: @(i == 0 ? "block" : "none"); padding-top: 20px">
						<p><strong>@("Câu " + (i + 1) + ": ")</strong>@question.Content</p>

						@foreach (var answer in question.Answers)
						{
							<div class="form-check">
								<input class="form-check-input" type="radio"
									   name="Answers[@i].AnswerId"
									   id="answer_@answer.Id"
									   value="@answer.Id" />
								<label class="form-check-label" for="answer_@answer.Id">
									@answer.AnswerText
								</label>
							</div>
						}

						<input type="hidden" name="Answers[@i].QuestionId" value="@question.Id" />
					</div>
				}
			</div>
		</div>

		<button type="submit" id="submitBtn" class="btn btn-primary d-block mx-auto mt-4" style="width: max-content">Nộp bài</button>
	</div>
</form>

@section Scripts {
	<script>
		let totalTime = @(Model.TotalTime.TotalSeconds);
		const countdownEl = document.getElementById("time");
		const form = document.querySelector("form");
		const submitBtn = document.getElementById("submitBtn");

		function updateCountdown() {
			const minutes = Math.floor(totalTime / 60);
			const seconds = totalTime % 60;
			countdownEl.innerText = `${minutes}:${seconds.toString().padStart(2, '0')}`;

			if (totalTime <= 0) {
				clearInterval(timerInterval);
				countdownEl.innerText = "0:00";
				alert("⏰ Hết giờ! Bài thi sẽ được tự động nộp.");
				submitBtn.disabled = true;
				const form = document.querySelector("form");
				const formData = new FormData(form);
				const token = document.querySelector('input[name="__RequestVerificationToken"]').value;

				fetch(form.action, {
					method: 'POST',
					headers: {
						'RequestVerificationToken': token,
						'Content-Type': 'application/x-www-form-urlencoded'
					},
					body: new URLSearchParams(new FormData(form))
				}).then(response => {
					if (response.redirected) {
						window.location.href = response.url;
					}
				});
			}

			totalTime--;
		}

		updateCountdown(); 
		const timerInterval = setInterval(updateCountdown, 1000);

		function showQuestion(index) {
			const boxes = document.querySelectorAll('.question-box');
			boxes.forEach((box, i) => {
				box.style.display = (i === index) ? 'block' : 'none';
			});
		}
	</script>
}