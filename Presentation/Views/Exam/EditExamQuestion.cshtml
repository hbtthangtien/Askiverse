@model UpdateBankQuestionDTO
@using Application.DTOs.Question
<style>
    body {
        background: linear-gradient(120deg, #F99FCF, #B2EDE3);
        color: #121117;
    }

    h2, h6, label.form-label, .form-check-label {
        color: #D13D76;
    }

    .container {
        background-color: #FFFFFF;
        border-radius: 20px;
        padding: 30px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.05);
    }

    .form-control,
    .form-select {
        border-radius: 10px;
        border: 1px solid #ccc;
        transition: border 0.3s ease;
    }

        .form-control:focus,
        .form-select:focus {
            border-color: #FE9FC3;
            box-shadow: 0 0 0 0.2rem rgba(254, 159, 195, 0.3);
        }

    .btn-success {
        background-color: #D13D76;
        border-color: #D13D76;
    }

        .btn-success:hover {
            background-color: #a52d5c;
            border-color: #a52d5c;
        }

    .btn-outline-primary {
        border-color: #D13D76;
        color: #D13D76;
    }

        .btn-outline-primary:hover {
            background-color: #FE9FC3;
            color: #fff;
        }

    .btn-outline-danger {
        border-color: #D13D76;
        color: #D13D76;
    }

        .btn-outline-danger:hover {
            background-color: #D13D76;
            color: #fff;
        }

    .form-check-input:checked {
        background-color: #D13D76;
        border-color: #D13D76;
    }

    .answer-item {
        background-color: #F0F8F6;
        border: 1px solid #C4F0E0;
        border-radius: 12px;
    }

    .text-danger {
        font-size: 0.875rem;
        color: #D13D76 !important;
    }

    .form-check-label {
        font-weight: 500;
    }
</style>
<div class="container mt-4">
    <h2>Edit Question</h2>
    <form asp-action="EditExamQuestion" method="post">
        @Html.HiddenFor(m => m.Id)
        @Html.HiddenFor(m => m.QuestionTypeId)

        <div class="mb-3">
            <label class="form-label">Content</label>
            @Html.TextAreaFor(m => m.Content, new { @class = "form-control", @id = "editor" })
            @Html.ValidationMessageFor(m => m.Content, "", new { @class = "text-danger" })
        </div>

        <div class="row">
            <div class="col-md-6 mb-3">
                <label class="form-label">Loại câu hỏi</label>
                <input type="text" class="form-control" value="@Model.QuestionTypeName" readonly />
            </div>
            <div class="col-md-6 mb-3">
                <label class="form-label">Độ khó</label>
                <select asp-for="LevelId" class="form-select" asp-items="ViewBag.Levels">
                    <option value="">-- Chọn độ khó --</option>
                </select>
                @Html.ValidationMessageFor(m => m.LevelId, "", new { @class = "text-danger" })
            </div>
        </div>

       

        <h6>Answers</h6>

        <div id="answer-list">
            @if (Model.QuestionTypeId == 1) // Multiple Choice
            {
                for (int i = 0; i < Model.Answers.Count; i++)
                {
                    <div class="answer-item mb-2 border p-2 rounded">
                        @Html.HiddenFor(m => m.Answers[i].Id)
                        @Html.HiddenFor(m => m.Answers[i].IsDeleted)
                        @Html.HiddenFor(m => m.Answers[i].MatchingPairKey)

                        <div class="row">
                            <div class="col-md-8">
                                @Html.TextBoxFor(m => m.Answers[i].AnswerText, new { @class = "form-control", placeholder = "Answer text" })
                            </div>
                            <div class="col-md-4 d-flex align-items-center">
                                @Html.CheckBoxFor(m => m.Answers[i].IsCorrected)
                                <label class="ms-1">Correct</label>
                            </div>
                        </div>
                    </div>
                }
            }
            else if (Model.QuestionTypeId == 2) // Fill in the Blank
            {
                for (int i = 0; i < Model.Answers.Count; i++)
                {
                    <div class="answer-item mb-2 border p-2 rounded">
                        @Html.HiddenFor(m => m.Answers[i].Id)
                        @Html.HiddenFor(m => m.Answers[i].IsDeleted)
                        @Html.HiddenFor(m => m.Answers[i].MatchingPairKey)

                        @Html.TextBoxFor(m => m.Answers[i].AnswerText, new { @class = "form-control", placeholder = "Correct word or phrase" })
                    </div>
                }
            }
            else if (Model.QuestionTypeId == 3) // Matching
            {
                var grouped = Model.Answers
                .Select((a, index) => new { Answer = a, Index = index })
                .GroupBy(x => x.Answer.MatchingPairKey)
                .ToList();

                foreach (var pair in grouped)
                {
                    if (pair.Count() == 2)
                    {
                        var left = pair.ElementAt(0);
                        var right = pair.ElementAt(1);

                        <div class="matching-pair-group border rounded p-2 mb-2">
                            @Html.HiddenFor(m => m.Answers[left.Index].Id)
                            @Html.HiddenFor(m => m.Answers[left.Index].IsDeleted)
                            @Html.HiddenFor(m => m.Answers[left.Index].MatchingPairKey)

                            @Html.HiddenFor(m => m.Answers[right.Index].Id)
                            @Html.HiddenFor(m => m.Answers[right.Index].IsDeleted)
                            @Html.HiddenFor(m => m.Answers[right.Index].MatchingPairKey)

                            <div class="row">
                                <div class="col-md-6">
                                    <label>Đáp án bên trái (cặp @pair.Key)</label>
                                    @Html.TextBoxFor(m => m.Answers[left.Index].AnswerText, new { @class = "form-control" })
                                </div>
                                <div class="col-md-6">
                                    <label>Đáp án bên phải (cặp @pair.Key)</label>
                                    @Html.TextBoxFor(m => m.Answers[right.Index].AnswerText, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                    }
                }
            }
        </div>

        <div class="mt-4">
            <button type="submit" class="btn btn-success">Lưu</button>
            <a href="/Exam/Create" class="btn btn-secondary">Hủy</a>
        </div>
    </form>
</div>

@section Scripts {
    <script src="https://cdn.ckeditor.com/ckeditor5/39.0.1/classic/ckeditor.js"></script>
    <script>
        let ckeditorInstance;

        ClassicEditor.create(document.querySelector('#editor'), {
            toolbar: [
                'heading', '|',
                'bold', 'italic', 'underline', 'strikethrough', '|',
                'link', 'bulletedList', 'numberedList', '|',
                'blockQuote', 'insertTable', 'undo', 'redo'
            ],
            language: 'vi'
        }).then(editor => {
            ckeditorInstance = editor;
        }).catch(error => {
            console.error('CKEditor lỗi:', error);
        });

        $('form').submit(function () {
            if (ckeditorInstance) {
                $('#editor').val(ckeditorInstance.getData());
            }
        });
    </script>
}
