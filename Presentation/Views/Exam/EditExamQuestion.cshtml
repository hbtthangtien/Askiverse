@model UpdateBankQuestionDTO
@using Application.DTOs.Question
<style>
    body {
        background: linear-gradient(120deg, #F99FCF, #B2EDE3);
        color: #121117;
    }

    h2, h6, label.form-label, .form-check-label {
        color: #D13D76;
    }

    .container {
        background-color: #FFFFFF;
        border-radius: 20px;
        padding: 30px;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.05);
    }

    .form-control,
    .form-select {
        border-radius: 10px;
        border: 1px solid #ccc;
        transition: border 0.3s ease;
    }

        .form-control:focus,
        .form-select:focus {
            border-color: #FE9FC3;
            box-shadow: 0 0 0 0.2rem rgba(254, 159, 195, 0.3);
        }

    .btn-success {
        background-color: #D13D76;
        border-color: #D13D76;
    }

        .btn-success:hover {
            background-color: #a52d5c;
            border-color: #a52d5c;
        }

    .btn-outline-primary {
        border-color: #D13D76;
        color: #D13D76;
    }

        .btn-outline-primary:hover {
            background-color: #FE9FC3;
            color: #fff;
        }

    .btn-outline-danger {
        border-color: #D13D76;
        color: #D13D76;
    }

        .btn-outline-danger:hover {
            background-color: #D13D76;
            color: #fff;
        }

    .form-check-input:checked {
        background-color: #D13D76;
        border-color: #D13D76;
    }

    .answer-item {
        background-color: #F0F8F6;
        border: 1px solid #C4F0E0;
        border-radius: 12px;
    }

    .text-danger {
        font-size: 0.875rem;
        color: #D13D76 !important;
    }

    .form-check-label {
        font-weight: 500;
    }
</style>

<div class="container mt-4">
    <h2>Edit Question</h2>
    <form asp-action="EditExamQuestion" method="post">
        @Html.HiddenFor(m => m.Id)

        <div class="mb-3">
            <label class="form-label">Content</label>
            @Html.TextAreaFor(m => m.Content, new { @class = "form-control", rows = "3" })
            @Html.ValidationMessageFor(m => m.Content, "", new { @class = "text-danger" })
        </div>

        <div class="row">
            <div class="col-md-6 mb-3">
                <label class="form-label">Loại câu hỏi</label>
                <select asp-for="QuestionTypeId" class="form-select" asp-items="ViewBag.QuestionTypes">
                    <option value="">-- Chọn loại câu hỏi --</option>
                </select>
            </div>
            <div class="col-md-6 mb-3">
                <label class="form-label">Độ khó</label>
                <select asp-for="LevelId" class="form-select" asp-items="ViewBag.Levels">
                    <option value="">-- Chọn độ khó --</option>
                </select>
            </div>
        </div>

        <div class="form-check form-switch mb-3">
            @Html.CheckBoxFor(m => m.IsPublic, new { @class = "form-check-input", role = "switch" })
            <label class="form-check-label">Public</label>
        </div>

        <h6>Answers</h6>
        <div id="answer-list">
            @for (int i = 0; i < Model.Answers.Count; i++)
            {
                <div class="answer-item mb-2 border p-2 rounded" data-index="@i">
                    @Html.HiddenFor(m => m.Answers[i].Id)
                    @Html.HiddenFor(m => m.Answers[i].IsDeleted)

                    <div class="row">
                        <div class="col-md-8">
                            @Html.TextBoxFor(m => m.Answers[i].AnswerText, new { @class = "form-control", placeholder = "Answer text" })
                        </div>
                        <div class="col-md-2 d-flex align-items-center">
                            @Html.CheckBoxFor(m => m.Answers[i].IsCorrected)
                            <label class="ms-1">Correct</label>
                        </div>
                        <div class="col-md-2 d-flex align-items-center">
                            <button type="button" class="btn btn-outline-danger btn-sm btn-remove-answer">Remove</button>
                        </div>
                    </div>
                </div>
            }
        </div>

        <button type="button" class="btn btn-outline-primary mt-2" id="btn-add-answer">+ Add Answer</button>

        <div class="mt-4">
            <button type="submit" class="btn btn-success">Save</button>
            <a href="/Exam/Create" class="btn btn-secondary">Cancel</a>
        </div>
    </form>
</div>
@section Scripts {
    <script>
        $(document).on('click', '#btn-add-answer', function () {
            const index = $('#answer-list .answer-item').length;

            const html = `
                <div class="answer-item mb-2 border p-2 rounded" data-index="${index}">
                    <input type="hidden" name="Answers[${index}].Id" />
                    <input type="hidden" name="Answers[${index}].IsDeleted" value="false" />
                    <div class="row">
                        <div class="col-md-8">
                            <input type="text" name="Answers[${index}].AnswerText" class="form-control" placeholder="Answer text" />
                        </div>
                        <div class="col-md-2 d-flex align-items-center">
                            <input type="checkbox" name="Answers[${index}].IsCorrected" />
                            <label class="ms-1">Correct</label>
                        </div>
                        <div class="col-md-2 d-flex align-items-center">
                            <button type="button" class="btn btn-outline-danger btn-sm btn-remove-answer">Remove</button>
                        </div>
                    </div>
                </div>`;
            $('#answer-list').append(html);
        });

        $(document).on('click', '.btn-remove-answer', function () {
            const container = $(this).closest('.answer-item');
            const inputDeleted = container.find('input[name$=".IsDeleted"]');
            if (inputDeleted.length) {
                inputDeleted.val('true');
                container.hide();
            } else {
                container.remove();
            }
        });
    </script>
}
