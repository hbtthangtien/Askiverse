@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model Application.DTOs.ViewModel.ExamSubjectViewModel;
@using System.Security.Claims

@{
	var userId = User.FindFirstValue(ClaimTypes.NameIdentifier);
	int stt = 1;
}

@if (ViewData["Error"] != null)
{
	<h3 class="text-center">@ViewData["Error"]</h3>
}
else
{@if (TempData["Success"] != null)
	{
		<div class="alert alert-success alert-dismissible fade show" role="alert">
			✅ @TempData["Success"]
			<button type="button" class="btn-close" data-bs-dismiss="alert"></button>
		</div>
	}

	@if (TempData["Error"] != null)
	{
		<div class="alert alert-danger alert-dismissible fade show" role="alert">
			⚠️ @TempData["Error"]
			<button type="button" class="btn-close" data-bs-dismiss="alert"></button>
		</div>
	}

	<table class="table table-hover align-middle shadow-sm">
		<thead class="table-dark text-center">
			<tr>
				<th scope="col">#</th>
				<th scope="col">📝 Tiêu đề</th>
				<th scope="col">📖 Miêu tả</th>
				<th scope="col">📄 Văn bản nguồn</th>
				<th scope="col">❓ Tổng câu hỏi</th>
				<th scope="col">📅 Ngày tạo</th>
				<th scope="col">🎯 Hoạt động</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var exam in Model.Exams)
			{
				<tr>
					<td class="text-center fw-semibold">@stt</td>
					<td>@exam.Title</td>
					<td>@exam.Description</td>
					<td><span class="badge bg-info text-dark">@exam.SourceText</span></td>
					<td><span class="badge bg-secondary">@exam.TotalQuestion câu</span></td>
					<td><span class="text-muted">@exam.CreatedAt.ToString("dd/MM/yyyy")</span></td>
					<td>
						<form id="exam-form-@exam.Id" method="post" asp-controller="Exam" asp-action="GetExamTakeById">
							<input type="hidden" name="examId" value="@exam.Id" />
							<button class="btn btn-primary exam-start-btn w-100 mb-2" type="submit" data-exam-id="@exam.Id">
								🚀 Vào thi
							</button>
						</form>
						<a asp-controller="ExamScored" asp-action="AllExamScoredByUserIdByExamId" asp-route-userId="@userId" asp-route-examId="@exam.Id"
						   class="btn btn-outline-danger w-100 mb-2">
							📊 Xem kết quả
						</a>
						<!-- ✅ Thêm nút xem trước tại đây -->
						<a asp-controller="Exam" asp-action="PreviewExam" asp-route-examId="@exam.Id"
						   class="btn btn-outline-secondary w-100">
							👁️ Xem trước
						</a>
						<form asp-controller="Exam" asp-action="DeleteExam" method="post" onsubmit="return confirm('Bạn có chắc chắn muốn xóa đề này?');">
							@Html.AntiForgeryToken()
							<input type="hidden" name="examId" value="@exam.Id" />
							<button type="submit" class="btn btn-danger w-100 mt-2">🗑️ Xóa đề</button>
						</form>


						@{
							var isFavourite = exam.FavouritedByUsers.Any(f => f.UserId == userId);
						}
						<button class="btn btn-outline-dark w-100 favourite-btn"
								data-exam-id="@exam.Id"
								data-user-id="@userId"
								data-is-fav="@isFavourite.ToString().ToLower()">
							@(isFavourite ? "Bỏ yêu thích" : "Thêm vào yêu thích")
						</button>
						@if (ViewData["ErrorFavourite"] != null)
						{
							<p>@ViewData["ErrorFavourite"]</p>
						}
					</td>
				</tr>
				stt++;
				
			}
		</tbody>
	</table>
}